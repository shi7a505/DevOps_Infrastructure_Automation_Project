---
- name: Install and Configure SonarQube
  hosts: sonarqube
  become: yes
  
  vars:
    sonarqube_version: "9.9.0.65466"
    sonarqube_download_url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
    sonarqube_dir: "/opt/sonarqube"
    sonarqube_user: "sonarqube"
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - openjdk-17-jdk
          - unzip
          - wget
        state: present

    - name: Set system limits for SonarQube
      blockinfile:
        path: /etc/security/limits.conf
        block: |
          sonarqube   -   nofile   65536
          sonarqube   -   nproc    4096

    - name: Set kernel parameters
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: 'vm.max_map_count', value: '262144' }
        - { name: 'fs.file-max', value: '65536' }

    - name: Create SonarQube user
      user:
        name: "{{ sonarqube_user }}"
        system: yes
        shell: /bin/bash
        home: "{{ sonarqube_dir }}"
        create_home: no

    - name: Download SonarQube
      get_url:
        url: "{{ sonarqube_download_url }}"
        dest: "/tmp/sonarqube.zip"
        timeout: 300

    - name: Create SonarQube directory
      file:
        path: "{{ sonarqube_dir }}"
        state: directory
        owner: "{{ sonarqube_user }}"
        group: "{{ sonarqube_user }}"

    - name: Extract SonarQube
      unarchive:
        src: "/tmp/sonarqube.zip"
        dest: "/opt"
        remote_src: yes
        owner: "{{ sonarqube_user }}"
        group: "{{ sonarqube_user }}"

    - name: Move SonarQube files
      shell: |
        mv /opt/sonarqube-{{ sonarqube_version }}/* {{ sonarqube_dir }}/
        rmdir /opt/sonarqube-{{ sonarqube_version }}
      args:
        creates: "{{ sonarqube_dir }}/bin"

    - name: Set SonarQube run as user
      lineinfile:
        path: "{{ sonarqube_dir }}/bin/linux-x86-64/sonar.sh"
        regexp: '^#RUN_AS_USER='
        line: 'RUN_AS_USER={{ sonarqube_user }}'

    - name: Create SonarQube systemd service
      copy:
        dest: /etc/systemd/system/sonarqube.service
        content: |
          [Unit]
          Description=SonarQube service
          After=syslog.target network.target

          [Service]
          Type=forking
          ExecStart={{ sonarqube_dir }}/bin/linux-x86-64/sonar.sh start
          ExecStop={{ sonarqube_dir }}/bin/linux-x86-64/sonar.sh stop
          User={{ sonarqube_user }}
          Group={{ sonarqube_user }}
          Restart=always
          LimitNOFILE=65536
          LimitNPROC=4096

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable SonarQube
      systemd:
        name: sonarqube
        state: started
        enabled: yes

    - name: Wait for SonarQube to start
      wait_for:
        port: 9000
        delay: 30
        timeout: 600

    - name: Display SonarQube access info
      debug:
        msg: 
          - "SonarQube is running on port 9000"
          - "Default credentials: admin / admin"
